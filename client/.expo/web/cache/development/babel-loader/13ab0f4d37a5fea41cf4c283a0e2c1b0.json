{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from \"../../components/theme/button\";\nimport { Input } from \"../../components/theme/input\";\nimport Text from \"../../components/theme/text\";\nimport { Screen } from \"../../layouts/screen\";\nimport { Colors } from \"../../utils/constants\";\nimport { post } from \"../../utils/http\";\nimport { validate } from \"../../utils/validator\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setLogin = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function loginHandler() {\n    var data, _validate, _validate2, passes, info, res;\n\n    return _regeneratorRuntime.async(function loginHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              email: email,\n              password: password\n            };\n            _validate = validate(data, {\n              email: \"required\",\n              password: \"required\"\n            }), _validate2 = _slicedToArray(_validate, 2), passes = _validate2[0], info = _validate2[1];\n\n            if (passes) {\n              _context.next = 5;\n              break;\n            }\n\n            Alert.alert(\"Bad Request\", info[0][0]);\n            return _context.abrupt(\"return\");\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(post(\"api/auth/login\", data));\n\n          case 8:\n            res = _context.sent;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"token\", res.data.token));\n\n          case 11:\n            Alert.alert(\"Success\", \"Login Successful\");\n            navigation.navigate(\"App\");\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](5);\n\n            if (_context.t0.response.status == 400) {\n              Alert.alert(\"Bad Request\", Object.values(_context.t0.response.data)[0][0]);\n            } else {\n              Alert.alert(\"Invalid Credentials\", \"Invalid Credentials\");\n            }\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 15]], Promise);\n  }\n\n  return _jsxs(Screen, {\n    mt: true,\n    children: [_jsx(View, {\n      style: {\n        marginTop: 20\n      },\n      children: _jsx(Text, {\n        size: 30,\n        medium: true,\n        align: \"center\",\n        color: Colors.primary,\n        children: \"Welcome back.\"\n      })\n    }), _jsxs(View, {\n      style: {\n        marginTop: 30\n      },\n      children: [_jsx(Input, {\n        label: \"Email or username\",\n        handler: setLogin\n      }), _jsx(Input, {\n        label: \"Password\",\n        handler: setPassword,\n        password: true\n      })]\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: loginHandler\n    }), _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"Register\");\n        },\n        children: _jsx(Text, {\n          align: \"center\",\n          color: Colors.primary,\n          children: \"Don't Have an account ?\"\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useState","Button","Input","Text","Screen","Colors","post","validate","SecureStore","LoginScreen","navigation","email","setLogin","password","setPassword","loginHandler","data","passes","info","Alert","alert","res","setItemAsync","token","navigate","response","status","Object","values","marginTop","primary"],"sources":["C:/Users/USER/Documents/mobile dev/nat-mobile-starter/client/screens/auth/login.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Alert, TouchableOpacity, View } from \"react-native\";\r\nimport { Button } from \"../../components/theme/button\";\r\nimport { Input } from \"../../components/theme/input\";\r\nimport Text from \"../../components/theme/text\";\r\nimport { Screen } from \"../../layouts/screen\";\r\nimport { Colors } from \"../../utils/constants\";\r\nimport { post } from \"../../utils/http\";\r\nimport { validate } from \"../../utils/validator\";\r\n\r\nimport * as SecureStore from \"expo-secure-store\";\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n\tconst [email, setLogin] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n\tasync function loginHandler() {\r\n\t\tlet data = { email, password };\r\n\r\n\t\tlet [passes, info] = validate(data, {\r\n\t\t\temail: \"required\",\r\n\t\t\tpassword: \"required\",\r\n\t\t});\r\n\r\n\t\tif (!passes) {\r\n\t\t\tAlert.alert(\"Bad Request\", info[0][0]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await post(\"api/auth/login\", data);\r\n\r\n\t\t\tawait SecureStore.setItemAsync(\"token\", res.data.token);\r\n\t\t\tAlert.alert(\"Success\", \"Login Successful\");\r\n\t\t\tnavigation.navigate(\"App\");\r\n\t\t} catch (error) {\r\n\t\t\tif (error.response.status == 400) {\r\n\t\t\t\tAlert.alert(\r\n\t\t\t\t\t\"Bad Request\",\r\n\t\t\t\t\tObject.values(error.response.data)[0][0]\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tAlert.alert(\"Invalid Credentials\", \"Invalid Credentials\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Screen mt>\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Text size={30} medium align=\"center\" color={Colors.primary}>\r\n\t\t\t\t\tWelcome back.\r\n\t\t\t\t</Text>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ marginTop: 30 }}>\r\n\t\t\t\t<Input label=\"Email or username\" handler={setLogin} />\r\n\t\t\t\t<Input label=\"Password\" handler={setPassword} password />\r\n\t\t\t</View>\r\n\t\t\t<Button title=\"Login\" onPress={loginHandler} />\r\n\t\t\t<View>\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tnavigation.navigate(\"Register\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text align=\"center\" color={Colors.primary}>\r\n\t\t\t\t\t\tDon't Have an account ?\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</View>\r\n\t\t</Screen>\r\n\t);\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,MAAT;AACA,SAASC,KAAT;AACA,OAAOC,IAAP;AACA,SAASC,MAAT;AACA,SAASC,MAAT;AACA,SAASC,IAAT;AACA,SAASC,QAAT;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;AAEA,eAAe,SAASC,WAAT,OAAqC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EACnD,gBAA0BV,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOW,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgCZ,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOa,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,SAAeC,YAAf;IAAA;;IAAA;MAAA;QAAA;UAAA;YACKC,IADL,GACY;cAAEL,KAAK,EAALA,KAAF;cAASE,QAAQ,EAARA;YAAT,CADZ;YAAA,YAGsBN,QAAQ,CAACS,IAAD,EAAO;cACnCL,KAAK,EAAE,UAD4B;cAEnCE,QAAQ,EAAE;YAFyB,CAAP,CAH9B,6CAGMI,MAHN,kBAGcC,IAHd;;YAAA,IAQMD,MARN;cAAA;cAAA;YAAA;;YASEE,KAAK,CAACC,KAAN,CAAY,aAAZ,EAA2BF,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAA3B;YATF;;UAAA;YAAA;YAAA;YAAA,iCAckBZ,IAAI,CAAC,gBAAD,EAAmBU,IAAnB,CAdtB;;UAAA;YAcMK,GAdN;YAAA;YAAA,iCAgBQb,WAAW,CAACc,YAAZ,CAAyB,OAAzB,EAAkCD,GAAG,CAACL,IAAJ,CAASO,KAA3C,CAhBR;;UAAA;YAiBEJ,KAAK,CAACC,KAAN,CAAY,SAAZ,EAAuB,kBAAvB;YACAV,UAAU,CAACc,QAAX,CAAoB,KAApB;YAlBF;YAAA;;UAAA;YAAA;YAAA;;YAoBE,IAAI,YAAMC,QAAN,CAAeC,MAAf,IAAyB,GAA7B,EAAkC;cACjCP,KAAK,CAACC,KAAN,CACC,aADD,EAECO,MAAM,CAACC,MAAP,CAAc,YAAMH,QAAN,CAAeT,IAA7B,EAAmC,CAAnC,EAAsC,CAAtC,CAFD;YAIA,CALD,MAKO;cACNG,KAAK,CAACC,KAAN,CAAY,qBAAZ,EAAmC,qBAAnC;YACA;;UA3BH;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EA+BA,OACC,MAAC,MAAD;IAAQ,EAAE,MAAV;IAAA,WACC,KAAC,IAAD;MACC,KAAK,EAAE;QACNS,SAAS,EAAE;MADL,CADR;MAAA,UAKC,KAAC,IAAD;QAAM,IAAI,EAAE,EAAZ;QAAgB,MAAM,MAAtB;QAAuB,KAAK,EAAC,QAA7B;QAAsC,KAAK,EAAExB,MAAM,CAACyB,OAApD;QAAA;MAAA;IALD,EADD,EAUC,MAAC,IAAD;MAAM,KAAK,EAAE;QAAED,SAAS,EAAE;MAAb,CAAb;MAAA,WACC,KAAC,KAAD;QAAO,KAAK,EAAC,mBAAb;QAAiC,OAAO,EAAEjB;MAA1C,EADD,EAEC,KAAC,KAAD;QAAO,KAAK,EAAC,UAAb;QAAwB,OAAO,EAAEE,WAAjC;QAA8C,QAAQ;MAAtD,EAFD;IAAA,EAVD,EAcC,KAAC,MAAD;MAAQ,KAAK,EAAC,OAAd;MAAsB,OAAO,EAAEC;IAA/B,EAdD,EAeC,KAAC,IAAD;MAAA,UACC,KAAC,gBAAD;QACC,OAAO,EAAE,mBAAM;UACdL,UAAU,CAACc,QAAX,CAAoB,UAApB;QACA,CAHF;QAAA,UAKC,KAAC,IAAD;UAAM,KAAK,EAAC,QAAZ;UAAqB,KAAK,EAAEnB,MAAM,CAACyB,OAAnC;UAAA;QAAA;MALD;IADD,EAfD;EAAA,EADD;AA6BA"},"metadata":{},"sourceType":"module"}