{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"bold\", \"medium\", \"small\", \"size\", \"color\", \"align\", \"styles\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Typo from \"react-native-web/dist/exports/Text\";\nimport { Colors } from \"../../utils/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Text(_ref) {\n  var children = _ref.children,\n      bold = _ref.bold,\n      medium = _ref.medium,\n      small = _ref.small,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 16 : _ref$size,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? Colors.text : _ref$color,\n      _ref$align = _ref.align,\n      align = _ref$align === void 0 ? \"left\" : _ref$align,\n      styles = _ref.styles,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(Typo, _objectSpread(_objectSpread({\n    style: [{\n      fontSize: size,\n      fontFamily: \"DMSans_400Regular\",\n      color: color,\n      textAlign: align\n    }, bold ? {\n      fontFamily: \"DMSans_700Bold\"\n    } : \"DMSans_400Regular\", medium ? {\n      fontFamily: \"DMSans_500Medium\"\n    } : \"DMSans_400Regular\", styles]\n  }, props), {}, {\n    children: children\n  }));\n}","map":{"version":3,"names":["Colors","Text","children","bold","medium","small","size","color","text","align","styles","props","fontSize","fontFamily","textAlign"],"sources":["C:/Users/USER/Documents/mobile dev/nat-mobile-starter/client/components/theme/text.jsx"],"sourcesContent":["import { Text as Typo } from \"react-native\";\r\nimport { Colors } from \"../../utils/constants\";\r\n\r\nexport default function Text({\r\n\tchildren,\r\n\tbold,\r\n\tmedium,\r\n\tsmall,\r\n\tsize = 16,\r\n\tcolor = Colors.text,\r\n\talign = \"left\",\r\n\tstyles,\r\n\t...props\r\n}) {\r\n\treturn (\r\n\t\t<Typo\r\n\t\t\tstyle={[\r\n\t\t\t\t{\r\n\t\t\t\t\tfontSize: size,\r\n\t\t\t\t\tfontFamily: \"DMSans_400Regular\",\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\ttextAlign: align,\r\n\t\t\t\t},\r\n\t\t\t\tbold ? { fontFamily: \"DMSans_700Bold\" } : \"DMSans_400Regular\",\r\n\t\t\t\tmedium\r\n\t\t\t\t\t? { fontFamily: \"DMSans_500Medium\" }\r\n\t\t\t\t\t: \"DMSans_400Regular\",\r\n\t\t\t\tstyles,\r\n\t\t\t]}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Typo>\r\n\t);\r\n}\r\n"],"mappings":";;;;;;;;;AACA,SAASA,MAAT;;AAEA,eAAe,SAASC,IAAT,OAUZ;EAAA,IATFC,QASE,QATFA,QASE;EAAA,IARFC,IAQE,QARFA,IAQE;EAAA,IAPFC,MAOE,QAPFA,MAOE;EAAA,IANFC,KAME,QANFA,KAME;EAAA,qBALFC,IAKE;EAAA,IALFA,IAKE,0BALK,EAKL;EAAA,sBAJFC,KAIE;EAAA,IAJFA,KAIE,2BAJMP,MAAM,CAACQ,IAIb;EAAA,sBAHFC,KAGE;EAAA,IAHFA,KAGE,2BAHM,MAGN;EAAA,IAFFC,MAEE,QAFFA,MAEE;EAAA,IADCC,KACD;;EACF,OACC,KAAC,IAAD;IACC,KAAK,EAAE,CACN;MACCC,QAAQ,EAAEN,IADX;MAECO,UAAU,EAAE,mBAFb;MAGCN,KAAK,EAAEA,KAHR;MAICO,SAAS,EAAEL;IAJZ,CADM,EAONN,IAAI,GAAG;MAAEU,UAAU,EAAE;IAAd,CAAH,GAAsC,mBAPpC,EAQNT,MAAM,GACH;MAAES,UAAU,EAAE;IAAd,CADG,GAEH,mBAVG,EAWNH,MAXM;EADR,GAcKC,KAdL;IAAA,UAgBET;EAhBF,GADD;AAoBA"},"metadata":{},"sourceType":"module"}