{"ast":null,"code":"import { createStackNavigator, CardStyleInterpolators } from \"@react-navigation/stack\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ArticleDetails from \"./screens/article-details\";\nimport { Articles } from \"./screens/articles\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport LoginScreen from \"./screens/auth/login\";\nimport RegisterScreen from \"./screens/auth/register\";\nimport React, { useContext } from \"react\";\nimport { AppContext } from \"./contexts/app-context\";\nimport NewArticle from \"./screens/new-article\";\nimport { LoadingScreen } from \"./screens/loading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RootNavigator = function RootNavigator() {\n  var _useContext = useContext(AppContext),\n      isLoggedIn = _useContext.isLoggedIn;\n\n  return _jsx(AuthNavigator, {});\n};\nvar AuthStack = createStackNavigator();\n\nfunction AuthNavigator() {\n  return _jsxs(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true,\n      gestureDirection: \"horizontal\",\n      cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS\n    },\n    children: [_jsx(AuthStack.Screen, {\n      name: \"Loading\",\n      component: LoadingScreen\n    }), _jsx(AuthStack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(AuthStack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen\n    }), _jsx(AuthStack.Screen, {\n      name: \"App\",\n      options: {\n        headerLeft: null,\n        gestureEnabled: false\n      },\n      component: AppNavigator\n    })]\n  });\n}\n\nvar Stack = createStackNavigator();\n\nfunction AppNavigator(_ref) {\n  var navigation = _ref.navigation;\n  navigation.addListener(\"beforeRemove\", function (e) {\n    e.preventDefault();\n  });\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      gestureEnabled: true,\n      gestureDirection: \"horizontal\",\n      cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\n      headerStyle: {\n        backgroundColor: \"dodgerblue\"\n      },\n      headerTitleStyle: {\n        color: \"white\",\n        fontFamily: \"DMSans_500Medium\"\n      },\n      headerBackImage: function headerBackImage() {\n        return _jsx(Ionicons, {\n          name: \"chevron-back\",\n          size: 24,\n          color: \"white\"\n        });\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Articles\",\n      component: Articles,\n      options: {\n        headerLeft: null,\n        gestureEnabled: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NewArticle\",\n      component: NewArticle\n    }), _jsx(Stack.Screen, {\n      name: \"ArticleDetails\",\n      options: function options(_ref2) {\n        var route = _ref2.route;\n        return {\n          title: \"Reading \" + route.params.item.title\n        };\n      },\n      component: ArticleDetails\n    })]\n  });\n}","map":{"version":3,"names":["createStackNavigator","CardStyleInterpolators","ArticleDetails","Articles","Ionicons","LoginScreen","RegisterScreen","React","useContext","AppContext","NewArticle","LoadingScreen","RootNavigator","isLoggedIn","AuthStack","AuthNavigator","headerShown","gestureEnabled","gestureDirection","cardStyleInterpolator","forHorizontalIOS","headerLeft","AppNavigator","Stack","navigation","addListener","e","preventDefault","headerStyle","backgroundColor","headerTitleStyle","color","fontFamily","headerBackImage","route","title","params","item"],"sources":["C:/Users/USER/Documents/mobile dev/nat-mobile-starter/client/navigator.js"],"sourcesContent":["import {\r\n\tcreateStackNavigator,\r\n\tCardStyleInterpolators,\r\n} from \"@react-navigation/stack\";\r\nimport { Text, View } from \"react-native\";\r\nimport ArticleDetails from \"./screens/article-details\";\r\nimport { Articles } from \"./screens/articles\";\r\n\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport LoginScreen from \"./screens/auth/login\";\r\nimport RegisterScreen from \"./screens/auth/register\";\r\nimport React, { useContext } from \"react\";\r\nimport { AppContext } from \"./contexts/app-context\";\r\nimport NewArticle from \"./screens/new-article\";\r\nimport { LoadingScreen } from \"./screens/loading\";\r\n\r\nexport const RootNavigator = () => {\r\n\tconst { isLoggedIn } = useContext(AppContext);\r\n\r\n\treturn <AuthNavigator />;\r\n};\r\n\r\nconst AuthStack = createStackNavigator();\r\n\r\nfunction AuthNavigator() {\r\n\treturn (\r\n\t\t<AuthStack.Navigator\r\n\t\t\tscreenOptions={{\r\n\t\t\t\theaderShown: false,\r\n\t\t\t\tgestureEnabled: true,\r\n\t\t\t\tgestureDirection: \"horizontal\",\r\n\t\t\t\tcardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<AuthStack.Screen name=\"Loading\" component={LoadingScreen} />\r\n\t\t\t<AuthStack.Screen name=\"Login\" component={LoginScreen} />\r\n\t\t\t<AuthStack.Screen name=\"Register\" component={RegisterScreen} />\r\n\t\t\t<AuthStack.Screen\r\n\t\t\t\tname=\"App\"\r\n\t\t\t\toptions={{\r\n\t\t\t\t\theaderLeft: null,\r\n\t\t\t\t\tgestureEnabled: false,\r\n\t\t\t\t}}\r\n\t\t\t\tcomponent={AppNavigator}\r\n\t\t\t/>\r\n\t\t</AuthStack.Navigator>\r\n\t);\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction AppNavigator({ navigation }) {\r\n\tnavigation.addListener(\"beforeRemove\", (e) => {\r\n\t\t// console.log(\"Yello no thing 1\");\r\n\t\te.preventDefault();\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Stack.Navigator\r\n\t\t\tscreenOptions={{\r\n\t\t\t\tgestureEnabled: true,\r\n\t\t\t\tgestureDirection: \"horizontal\",\r\n\t\t\t\tcardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\r\n\t\t\t\theaderStyle: {\r\n\t\t\t\t\tbackgroundColor: \"dodgerblue\",\r\n\t\t\t\t},\r\n\r\n\t\t\t\theaderTitleStyle: {\r\n\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\tfontFamily: \"DMSans_500Medium\",\r\n\t\t\t\t},\r\n\r\n\t\t\t\theaderBackImage: () => (\r\n\t\t\t\t\t<Ionicons name=\"chevron-back\" size={24} color=\"white\" />\r\n\t\t\t\t),\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Stack.Screen\r\n\t\t\t\tname=\"Articles\"\r\n\t\t\t\tcomponent={Articles}\r\n\t\t\t\toptions={{\r\n\t\t\t\t\theaderLeft: null,\r\n\t\t\t\t\tgestureEnabled: false,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Stack.Screen name=\"NewArticle\" component={NewArticle} />\r\n\t\t\t<Stack.Screen\r\n\t\t\t\tname=\"ArticleDetails\"\r\n\t\t\t\toptions={({ route }) => ({\r\n\t\t\t\t\ttitle: `Reading ${route.params.item.title}`,\r\n\t\t\t\t})}\r\n\t\t\t\tcomponent={ArticleDetails}\r\n\t\t\t/>\r\n\t\t</Stack.Navigator>\r\n\t);\r\n}\r\n"],"mappings":"AAAA,SACCA,oBADD,EAECC,sBAFD,QAGO,yBAHP;;;AAKA,OAAOC,cAAP;AACA,SAASC,QAAT;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT;AACA,OAAOC,UAAP;AACA,SAASC,aAAT;;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAClC,kBAAuBJ,UAAU,CAACC,UAAD,CAAjC;EAAA,IAAQI,UAAR,eAAQA,UAAR;;EAEA,OAAO,KAAC,aAAD,KAAP;AACA,CAJM;AAMP,IAAMC,SAAS,GAAGd,oBAAoB,EAAtC;;AAEA,SAASe,aAAT,GAAyB;EACxB,OACC,MAAC,SAAD,CAAW,SAAX;IACC,aAAa,EAAE;MACdC,WAAW,EAAE,KADC;MAEdC,cAAc,EAAE,IAFF;MAGdC,gBAAgB,EAAE,YAHJ;MAIdC,qBAAqB,EAAElB,sBAAsB,CAACmB;IAJhC,CADhB;IAAA,WAQC,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,SAAvB;MAAiC,SAAS,EAAET;IAA5C,EARD,EASC,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,OAAvB;MAA+B,SAAS,EAAEN;IAA1C,EATD,EAUC,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,UAAvB;MAAkC,SAAS,EAAEC;IAA7C,EAVD,EAWC,KAAC,SAAD,CAAW,MAAX;MACC,IAAI,EAAC,KADN;MAEC,OAAO,EAAE;QACRe,UAAU,EAAE,IADJ;QAERJ,cAAc,EAAE;MAFR,CAFV;MAMC,SAAS,EAAEK;IANZ,EAXD;EAAA,EADD;AAsBA;;AAED,IAAMC,KAAK,GAAGvB,oBAAoB,EAAlC;;AAEA,SAASsB,YAAT,OAAsC;EAAA,IAAdE,UAAc,QAAdA,UAAc;EACrCA,UAAU,CAACC,WAAX,CAAuB,cAAvB,EAAuC,UAACC,CAAD,EAAO;IAE7CA,CAAC,CAACC,cAAF;EACA,CAHD;EAKA,OACC,MAAC,KAAD,CAAO,SAAP;IACC,aAAa,EAAE;MACdV,cAAc,EAAE,IADF;MAEdC,gBAAgB,EAAE,YAFJ;MAGdC,qBAAqB,EAAElB,sBAAsB,CAACmB,gBAHhC;MAIdQ,WAAW,EAAE;QACZC,eAAe,EAAE;MADL,CAJC;MAQdC,gBAAgB,EAAE;QACjBC,KAAK,EAAE,OADU;QAEjBC,UAAU,EAAE;MAFK,CARJ;MAadC,eAAe,EAAE;QAAA,OAChB,KAAC,QAAD;UAAU,IAAI,EAAC,cAAf;UAA8B,IAAI,EAAE,EAApC;UAAwC,KAAK,EAAC;QAA9C,EADgB;MAAA;IAbH,CADhB;IAAA,WAmBC,KAAC,KAAD,CAAO,MAAP;MACC,IAAI,EAAC,UADN;MAEC,SAAS,EAAE9B,QAFZ;MAGC,OAAO,EAAE;QACRkB,UAAU,EAAE,IADJ;QAERJ,cAAc,EAAE;MAFR;IAHV,EAnBD,EA2BC,KAAC,KAAD,CAAO,MAAP;MAAc,IAAI,EAAC,YAAnB;MAAgC,SAAS,EAAEP;IAA3C,EA3BD,EA4BC,KAAC,KAAD,CAAO,MAAP;MACC,IAAI,EAAC,gBADN;MAEC,OAAO,EAAE;QAAA,IAAGwB,KAAH,SAAGA,KAAH;QAAA,OAAgB;UACxBC,KAAK,eAAaD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBF;QADZ,CAAhB;MAAA,CAFV;MAKC,SAAS,EAAEjC;IALZ,EA5BD;EAAA,EADD;AAsCA"},"metadata":{},"sourceType":"module"}