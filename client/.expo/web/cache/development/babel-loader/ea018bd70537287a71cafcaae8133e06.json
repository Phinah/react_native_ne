{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input } from \"../components/theme/input\";\nimport { Button } from \"../components/theme/button\";\nimport Text from \"../components/theme/text\";\nimport { Screen } from \"../layouts/screen\";\nimport { useState } from \"react\";\nimport { validate } from \"../utils/validator\";\nimport { post } from \"../utils/http\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NewArticle(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      body = _useState4[0],\n      setBody = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      summary = _useState6[0],\n      setSummary = _useState6[1];\n\n  function createArticle() {\n    var data, _validate, _validate2, passes, info, res;\n\n    return _regeneratorRuntime.async(function createArticle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              title: title,\n              body: body,\n              summary: summary\n            };\n            _validate = validate(data, {\n              title: \"required\",\n              body: \"required\",\n              summary: \"required\"\n            }), _validate2 = _slicedToArray(_validate, 2), passes = _validate2[0], info = _validate2[1];\n\n            if (passes) {\n              _context.next = 5;\n              break;\n            }\n\n            Alert.alert(\"Bad Request\", info[0][0]);\n            return _context.abrupt(\"return\");\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(post(\"api/articles\", data));\n\n          case 8:\n            res = _context.sent;\n\n            if (res.status == 201) {\n              Alert.alert(\"Success\", \"Article created successfully\");\n              navigation.navigate(\"App\");\n            } else {\n              Alert.alert(\"Bad Request\", \"Check if your fields are valid\");\n            }\n\n            _context.next = 14;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 12]], Promise);\n  }\n\n  return _jsx(Screen, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: {\n          marginTop: 20\n        },\n        children: [_jsx(Input, {\n          label: \"Article title\",\n          handler: setTitle\n        }), _jsx(Input, {\n          textarea: true,\n          label: \"Article Summary\",\n          handler: setSummary\n        }), _jsx(Input, {\n          textarea: true,\n          label: \"Article Body\",\n          height: 200,\n          handler: setBody\n        }), _jsx(Button, {\n          title: \"Create Article\",\n          onPress: createArticle\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["Input","Button","Text","Screen","useState","validate","post","NewArticle","navigation","title","setTitle","body","setBody","summary","setSummary","createArticle","data","passes","info","Alert","alert","res","status","navigate","marginTop"],"sources":["C:/Users/USER/Documents/mobile dev/nat-mobile-starter/client/screens/new-article.jsx"],"sourcesContent":["import { Alert, ScrollView, View } from \"react-native\";\r\nimport { Input } from \"../components/theme/input\";\r\nimport { Button } from \"../components/theme/button\";\r\nimport Text from \"../components/theme/text\";\r\nimport { Screen } from \"../layouts/screen\";\r\nimport { useState } from \"react\";\r\nimport { validate } from \"../utils/validator\";\r\nimport { post } from \"../utils/http\";\r\n\r\nexport default function NewArticle({ navigation }) {\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [body, setBody] = useState(\"\");\r\n\tconst [summary, setSummary] = useState(\"\");\r\n\r\n\tasync function createArticle() {\r\n\t\tlet data = { title, body, summary };\r\n\r\n\t\tlet [passes, info] = validate(data, {\r\n\t\t\ttitle: \"required\",\r\n\t\t\tbody: \"required\",\r\n\t\t\tsummary: \"required\",\r\n\t\t});\r\n\r\n\t\tif (!passes) {\r\n\t\t\tAlert.alert(\"Bad Request\", info[0][0]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tlet res = await post(\"api/articles\", data);\r\n\r\n\t\t\tif (res.status == 201) {\r\n\t\t\t\tAlert.alert(\"Success\", \"Article created successfully\");\r\n\t\t\t\tnavigation.navigate(\"App\");\r\n\t\t\t} else {\r\n\t\t\t\tAlert.alert(\"Bad Request\", \"Check if your fields are valid\");\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Screen>\r\n\t\t\t<ScrollView>\r\n\t\t\t\t<View style={{ marginTop: 20 }}>\r\n\t\t\t\t\t<Input label=\"Article title\" handler={setTitle} />\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttextarea\r\n\t\t\t\t\t\tlabel=\"Article Summary\"\r\n\t\t\t\t\t\thandler={setSummary}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttextarea\r\n\t\t\t\t\t\tlabel=\"Article Body\"\r\n\t\t\t\t\t\theight={200}\r\n\t\t\t\t\t\thandler={setBody}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button title={\"Create Article\"} onPress={createArticle} />\r\n\t\t\t\t</View>\r\n\t\t\t</ScrollView>\r\n\t\t</Screen>\r\n\t);\r\n}\r\n"],"mappings":";;;;;AACA,SAASA,KAAT;AACA,SAASC,MAAT;AACA,OAAOC,IAAP;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT;AACA,SAASC,IAAT;;;AAEA,eAAe,SAASC,UAAT,OAAoC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAClD,gBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAwBN,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOO,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA8BR,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOS,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,SAAeC,aAAf;IAAA;;IAAA;MAAA;QAAA;UAAA;YACKC,IADL,GACY;cAAEP,KAAK,EAALA,KAAF;cAASE,IAAI,EAAJA,IAAT;cAAeE,OAAO,EAAPA;YAAf,CADZ;YAAA,YAGsBR,QAAQ,CAACW,IAAD,EAAO;cACnCP,KAAK,EAAE,UAD4B;cAEnCE,IAAI,EAAE,UAF6B;cAGnCE,OAAO,EAAE;YAH0B,CAAP,CAH9B,6CAGMI,MAHN,kBAGcC,IAHd;;YAAA,IASMD,MATN;cAAA;cAAA;YAAA;;YAUEE,KAAK,CAACC,KAAN,CAAY,aAAZ,EAA2BF,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAA3B;YAVF;;UAAA;YAAA;YAAA;YAAA,iCAekBZ,IAAI,CAAC,cAAD,EAAiBU,IAAjB,CAftB;;UAAA;YAeMK,GAfN;;YAiBE,IAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;cACtBH,KAAK,CAACC,KAAN,CAAY,SAAZ,EAAuB,8BAAvB;cACAZ,UAAU,CAACe,QAAX,CAAoB,KAApB;YACA,CAHD,MAGO;cACNJ,KAAK,CAACC,KAAN,CAAY,aAAZ,EAA2B,gCAA3B;YACA;;YAtBH;YAAA;;UAAA;YAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EA0BA,OACC,KAAC,MAAD;IAAA,UACC,KAAC,UAAD;MAAA,UACC,MAAC,IAAD;QAAM,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAb,CAAb;QAAA,WACC,KAAC,KAAD;UAAO,KAAK,EAAC,eAAb;UAA6B,OAAO,EAAEd;QAAtC,EADD,EAEC,KAAC,KAAD;UACC,QAAQ,MADT;UAEC,KAAK,EAAC,iBAFP;UAGC,OAAO,EAAEI;QAHV,EAFD,EAOC,KAAC,KAAD;UACC,QAAQ,MADT;UAEC,KAAK,EAAC,cAFP;UAGC,MAAM,EAAE,GAHT;UAIC,OAAO,EAAEF;QAJV,EAPD,EAaC,KAAC,MAAD;UAAQ,KAAK,EAAE,gBAAf;UAAiC,OAAO,EAAEG;QAA1C,EAbD;MAAA;IADD;EADD,EADD;AAqBA"},"metadata":{},"sourceType":"module"}