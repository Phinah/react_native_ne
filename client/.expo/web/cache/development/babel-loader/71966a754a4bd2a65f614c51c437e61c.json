{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Colors } from \"../../utils/constants\";\nimport Text from \"./text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Input(_ref) {\n  var label = _ref.label,\n      handler = _ref.handler,\n      _ref$textarea = _ref.textarea,\n      textarea = _ref$textarea === void 0 ? false : _ref$textarea,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 100 : _ref$height,\n      _ref$password = _ref.password,\n      password = _ref$password === void 0 ? false : _ref$password;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setIsFocused = _useState2[1];\n\n  return _jsxs(View, {\n    style: {\n      marginVertical: 5\n    },\n    children: [_jsx(Text, {\n      children: label\n    }), textarea ? _jsx(TextInput, {\n      placeholder: label,\n      keyboardType: \"default\",\n      multiline: true,\n      textAlignVertical: \"top\",\n      onFocus: function onFocus() {\n        return setIsFocused(true);\n      },\n      onBlur: function onBlur() {\n        return setIsFocused(false);\n      },\n      onChangeText: handler,\n      style: [{\n        paddingVertical: 5,\n        paddingHorizontal: 20,\n        borderWidth: 2,\n        borderRadius: 2,\n        color: Colors.text,\n        height: height,\n        paddingTop: 10\n      }, isFocused ? {\n        borderColor: Colors.primary\n      } : {\n        borderColor: \"#aaa\"\n      }]\n    }) : _jsx(TextInput, {\n      placeholder: label,\n      keyboardType: \"default\",\n      onFocus: function onFocus() {\n        return setIsFocused(true);\n      },\n      onBlur: function onBlur() {\n        return setIsFocused(false);\n      },\n      onChangeText: handler,\n      secureTextEntry: password,\n      style: [{\n        paddingVertical: 5,\n        paddingHorizontal: 20,\n        borderWidth: 2,\n        borderRadius: 2,\n        color: Colors.text\n      }, isFocused ? {\n        borderColor: Colors.primary\n      } : {\n        borderColor: \"#aaa\"\n      }]\n    })]\n  });\n}","map":{"version":3,"names":["useState","Colors","Text","Input","label","handler","textarea","height","password","isFocused","setIsFocused","marginVertical","paddingVertical","paddingHorizontal","borderWidth","borderRadius","color","text","paddingTop","borderColor","primary"],"sources":["C:/Users/USER/Documents/mobile dev/nat-mobile-starter/client/components/theme/input.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { TextInput, View } from \"react-native\";\r\nimport { Colors } from \"../../utils/constants\";\r\nimport Text from \"./text\";\r\n\r\nexport function Input({\r\n\tlabel,\r\n\thandler,\r\n\ttextarea = false,\r\n\theight = 100,\r\n\tpassword = false,\r\n}) {\r\n\tconst [isFocused, setIsFocused] = useState(false);\r\n\r\n\treturn (\r\n\t\t<View\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginVertical: 5,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Text>{label}</Text>\r\n\t\t\t{textarea ? (\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tplaceholder={label}\r\n\t\t\t\t\tkeyboardType=\"default\"\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\ttextAlignVertical=\"top\"\r\n\t\t\t\t\tonFocus={() => setIsFocused(true)}\r\n\t\t\t\t\tonBlur={() => setIsFocused(false)}\r\n\t\t\t\t\tonChangeText={handler}\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpaddingVertical: 5,\r\n\t\t\t\t\t\t\tpaddingHorizontal: 20,\r\n\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\tborderRadius: 2,\r\n\t\t\t\t\t\t\tcolor: Colors.text,\r\n\t\t\t\t\t\t\theight,\r\n\t\t\t\t\t\t\tpaddingTop: 10,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tisFocused\r\n\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\tborderColor: Colors.primary,\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\tborderColor: \"#aaa\",\r\n\t\t\t\t\t\t\t  },\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tplaceholder={label}\r\n\t\t\t\t\tkeyboardType=\"default\"\r\n\t\t\t\t\tonFocus={() => setIsFocused(true)}\r\n\t\t\t\t\tonBlur={() => setIsFocused(false)}\r\n\t\t\t\t\tonChangeText={handler}\r\n\t\t\t\t\tsecureTextEntry={password}\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpaddingVertical: 5,\r\n\t\t\t\t\t\t\tpaddingHorizontal: 20,\r\n\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\tborderRadius: 2,\r\n\t\t\t\t\t\t\tcolor: Colors.text,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tisFocused\r\n\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\tborderColor: Colors.primary,\r\n\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\tborderColor: \"#aaa\",\r\n\t\t\t\t\t\t\t  },\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</View>\r\n\t);\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,MAAT;AACA,OAAOC,IAAP;;;AAEA,OAAO,SAASC,KAAT,OAMJ;EAAA,IALFC,KAKE,QALFA,KAKE;EAAA,IAJFC,OAIE,QAJFA,OAIE;EAAA,yBAHFC,QAGE;EAAA,IAHFA,QAGE,8BAHS,KAGT;EAAA,uBAFFC,MAEE;EAAA,IAFFA,MAEE,4BAFO,GAEP;EAAA,yBADFC,QACE;EAAA,IADFA,QACE,8BADS,KACT;;EACF,gBAAkCR,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOS,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,OACC,MAAC,IAAD;IACC,KAAK,EAAE;MACNC,cAAc,EAAE;IADV,CADR;IAAA,WAKC,KAAC,IAAD;MAAA,UAAOP;IAAP,EALD,EAMEE,QAAQ,GACR,KAAC,SAAD;MACC,WAAW,EAAEF,KADd;MAEC,YAAY,EAAC,SAFd;MAGC,SAAS,MAHV;MAIC,iBAAiB,EAAC,KAJnB;MAKC,OAAO,EAAE;QAAA,OAAMM,YAAY,CAAC,IAAD,CAAlB;MAAA,CALV;MAMC,MAAM,EAAE;QAAA,OAAMA,YAAY,CAAC,KAAD,CAAlB;MAAA,CANT;MAOC,YAAY,EAAEL,OAPf;MAQC,KAAK,EAAE,CACN;QACCO,eAAe,EAAE,CADlB;QAECC,iBAAiB,EAAE,EAFpB;QAGCC,WAAW,EAAE,CAHd;QAICC,YAAY,EAAE,CAJf;QAKCC,KAAK,EAAEf,MAAM,CAACgB,IALf;QAMCV,MAAM,EAANA,MAND;QAOCW,UAAU,EAAE;MAPb,CADM,EAUNT,SAAS,GACN;QACAU,WAAW,EAAElB,MAAM,CAACmB;MADpB,CADM,GAIN;QACAD,WAAW,EAAE;MADb,CAdG;IARR,EADQ,GA6BR,KAAC,SAAD;MACC,WAAW,EAAEf,KADd;MAEC,YAAY,EAAC,SAFd;MAGC,OAAO,EAAE;QAAA,OAAMM,YAAY,CAAC,IAAD,CAAlB;MAAA,CAHV;MAIC,MAAM,EAAE;QAAA,OAAMA,YAAY,CAAC,KAAD,CAAlB;MAAA,CAJT;MAKC,YAAY,EAAEL,OALf;MAMC,eAAe,EAAEG,QANlB;MAOC,KAAK,EAAE,CACN;QACCI,eAAe,EAAE,CADlB;QAECC,iBAAiB,EAAE,EAFpB;QAGCC,WAAW,EAAE,CAHd;QAICC,YAAY,EAAE,CAJf;QAKCC,KAAK,EAAEf,MAAM,CAACgB;MALf,CADM,EAQNR,SAAS,GACN;QACAU,WAAW,EAAElB,MAAM,CAACmB;MADpB,CADM,GAIN;QACAD,WAAW,EAAE;MADb,CAZG;IAPR,EAnCF;EAAA,EADD;AA+DA"},"metadata":{},"sourceType":"module"}