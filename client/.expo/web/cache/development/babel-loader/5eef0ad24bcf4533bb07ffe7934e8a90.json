{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as SecureStore from \"expo-secure-store\";\nimport axios from \"axios\";\nvar ip_address = \"192.168.1.56\";\nexport function get(url, options) {\n  var res;\n  return _regeneratorRuntime.async(function get$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"http://\" + ip_address + \":8000/\" + url, options));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function post(url, data) {\n  var token, res;\n  return _regeneratorRuntime.async(function post$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(\"token\"));\n\n        case 2:\n          token = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(axios.post(\"http://\" + ip_address + \":8000/\" + url, data, {\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n          res = _context2.sent;\n          return _context2.abrupt(\"return\", res);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["SecureStore","axios","ip_address","get","url","options","res","post","data","getItemAsync","token","headers","Authorization"],"sources":["C:/Users/USER/Documents/mobile dev/nat-mobile-starter/client/utils/http.js"],"sourcesContent":["import * as SecureStore from \"expo-secure-store\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst ip_address = \"192.168.1.56\";\r\n\r\nexport async function get(url, options) {\r\n\tlet res = await axios.get(`http://${ip_address}:8000/${url}`, options);\r\n\treturn res;\r\n}\r\n\r\nexport async function post(url, data) {\r\n\tlet token = await SecureStore.getItemAsync(\"token\");\r\n\r\n\tlet res = await axios.post(`http://${ip_address}:8000/${url}`, data, {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer \" + token,\r\n\t\t},\r\n\t});\r\n\r\n\treturn res;\r\n}\r\n"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAG,cAAnB;AAEA,OAAO,SAAeC,GAAf,CAAmBC,GAAnB,EAAwBC,OAAxB;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACUJ,KAAK,CAACE,GAAN,aAAoBD,UAApB,cAAuCE,GAAvC,EAA8CC,OAA9C,CADV;;QAAA;UACFC,GADE;UAAA,iCAECA,GAFD;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAKP,OAAO,SAAeC,IAAf,CAAoBH,GAApB,EAAyBI,IAAzB;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACYR,WAAW,CAACS,YAAZ,CAAyB,OAAzB,CADZ;;QAAA;UACFC,KADE;UAAA;UAAA,iCAGUT,KAAK,CAACM,IAAN,aAAqBL,UAArB,cAAwCE,GAAxC,EAA+CI,IAA/C,EAAqD;YACpEG,OAAO,EAAE;cACRC,aAAa,EAAE,YAAYF;YADnB;UAD2D,CAArD,CAHV;;QAAA;UAGFJ,GAHE;UAAA,kCASCA,GATD;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}