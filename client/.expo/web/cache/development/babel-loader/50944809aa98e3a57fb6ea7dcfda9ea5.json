{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from \"../../components/theme/button\";\nimport { Input } from \"../../components/theme/input\";\nimport Text from \"../../components/theme/text\";\nimport { AppContext } from \"../../contexts/app-context\";\nimport { Screen } from \"../../layouts/screen\";\nimport { Colors } from \"../../utils/constants\";\nimport { post } from \"../../utils/http\";\nimport { validate } from \"../../utils/validator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      names = _useState2[0],\n      setFullNames = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  function register() {\n    var data, _validate, _validate2, passes, info;\n\n    return _regeneratorRuntime.async(function register$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              names: names,\n              username: username,\n              email: email,\n              password: password\n            };\n            _validate = validate(data, {\n              names: \"required\",\n              username: \"required\",\n              email: \"required|email\",\n              password: \"required\"\n            }), _validate2 = _slicedToArray(_validate, 2), passes = _validate2[0], info = _validate2[1];\n\n            if (passes) {\n              _context.next = 5;\n              break;\n            }\n\n            Alert.alert(\"Bad Request\", info[0][0]);\n            return _context.abrupt(\"return\");\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(post(\"api/auth/register\", data));\n\n          case 8:\n            Alert.alert(\"Success\", \"Registration Successful\");\n            navigation.navigate(\"Login\");\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(_context.t0.response.data);\n            Alert.alert(_context.t0.response.data, \"User Already Registered\");\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 12]], Promise);\n  }\n\n  return _jsxs(Screen, {\n    mt: true,\n    children: [_jsx(View, {\n      style: {\n        marginTop: 20\n      },\n      children: _jsx(Text, {\n        size: 30,\n        medium: true,\n        align: \"center\",\n        color: Colors.primary,\n        children: \"Hello. have an account\"\n      })\n    }), _jsxs(View, {\n      style: {\n        marginTop: 30\n      },\n      children: [_jsx(Input, {\n        label: \"Full names\",\n        handler: setFullNames\n      }), _jsx(Input, {\n        label: \"Email\",\n        handler: setEmail\n      }), _jsx(Input, {\n        label: \"username\",\n        handler: setUsername\n      }), _jsx(Input, {\n        label: \"Password\",\n        handler: setPassword,\n        password: true\n      })]\n    }), _jsx(Button, {\n      title: \"Create\",\n      onPress: register\n    }), _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"Login\");\n        },\n        children: _jsx(Text, {\n          align: \"center\",\n          color: Colors.primary,\n          children: \"Already Have an account ?\"\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useContext","useState","Button","Input","Text","AppContext","Screen","Colors","post","validate","RegisterScreen","navigation","names","setFullNames","username","setUsername","email","setEmail","password","setPassword","register","data","passes","info","Alert","alert","navigate","console","log","response","marginTop","primary"],"sources":["C:/Users/USER/Documents/mobile dev/nat-mobile-starter/client/screens/auth/register.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { Alert, TouchableOpacity, View } from \"react-native\";\r\nimport { Button } from \"../../components/theme/button\";\r\nimport { Input } from \"../../components/theme/input\";\r\nimport Text from \"../../components/theme/text\";\r\nimport { AppContext } from \"../../contexts/app-context\";\r\nimport { Screen } from \"../../layouts/screen\";\r\nimport { Colors } from \"../../utils/constants\";\r\nimport { post } from \"../../utils/http\";\r\nimport { validate } from \"../../utils/validator\";\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n\tconst [names, setFullNames] = useState(\"\");\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n\tasync function register() {\r\n\t\tlet data = { names, username, email, password };\r\n\r\n\t\tlet [passes, info] = validate(data, {\r\n\t\t\tnames: \"required\",\r\n\t\t\tusername: \"required\",\r\n\t\t\temail: \"required|email\",\r\n\t\t\tpassword: \"required\",\r\n\t\t});\r\n\r\n\t\tif (!passes) {\r\n\t\t\tAlert.alert(\"Bad Request\", info[0][0]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tawait post(\"api/auth/register\", data);\r\n\r\n\t\t\tAlert.alert(\"Success\", \"Registration Successful\");\r\n\t\t\tnavigation.navigate(\"Login\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.response.data);\r\n\t\t\tAlert.alert(error.response.data, \"User Already Registered\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Screen mt>\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Text size={30} medium align=\"center\" color={Colors.primary}>\r\n\t\t\t\t\tHello. have an account\r\n\t\t\t\t</Text>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ marginTop: 30 }}>\r\n\t\t\t\t<Input label=\"Full names\" handler={setFullNames} />\r\n\t\t\t\t<Input label=\"Email\" handler={setEmail} />\r\n\t\t\t\t<Input label=\"username\" handler={setUsername} />\r\n\t\t\t\t<Input label=\"Password\" handler={setPassword} password />\r\n\t\t\t</View>\r\n\t\t\t<Button title=\"Create\" onPress={register} />\r\n\t\t\t<View>\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tnavigation.navigate(\"Login\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text align=\"center\" color={Colors.primary}>\r\n\t\t\t\t\t\tAlready Have an account ?\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</View>\r\n\t\t</Screen>\r\n\t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}